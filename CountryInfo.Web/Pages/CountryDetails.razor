@page "/country/{countryName}"
@using CountryInfo.Shared.DTOs
@using CountryInfo.Web.Services
@inject CountryService CountryService
@inject NavigationManager NavigationManager

<h3>Country Details</h3>

@if (country == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <div class="card">
            <div class="card-header">
                <h4>@country.Name</h4>
            </div>
            <div class="card-body">
                <p><strong>Capital City:</strong> @string.Join(", ", country.Capitals)</p>
                <p><strong>Total Population:</strong> @country.Population</p>
                <p><strong>Official Currencies:</strong> @string.Join(", ", country.Currencies)</p>
                <p><strong>Official Languages:</strong> @string.Join(", ", country.Languages)</p>
                <p><strong>Neighboring Countries/Borders:</strong></p>
                <ul>
                @foreach (var border in country.Borders)
                {
                            <li>
                                <a href="javascript:void(0)" @onclick="() => NavigateToCountry(border)">@border</a>
                            </li>
                }
                </ul>
            </div>
            <div class="card-footer">
                <button class="btn btn-secondary" @onclick="GoBack">Back</button>
            </div>
        </div>
}

@code {
    [Parameter]
    public string countryName { get; set; }

    private CountryDto country;

    protected override async Task OnInitializedAsync()
    {
        country = await CountryService.GetCountryDetailsAsync(countryName);
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/countries");
    }

    private void NavigateToCountry(string countryName)
    {
        NavigationManager.NavigateTo($"/country/{countryName}");
    }
}
