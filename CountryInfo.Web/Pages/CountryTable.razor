@page "/countries"
@using CountryInfo.Shared.DTOs
@using CountryInfo.Web.Services
@inject CountryService CountryService

<h3>Countries</h3>

@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Country Name</th>
                <th>Region</th>
                <th>Subregion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in PagedCountries)
            {
                <tr>
                    <td>@country.Name</td>
                    <td>@country.Region</td>
                    <td>@country.Subregion</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        <button @onclick="PreviousPage" disabled="@(!CanPreviousPage)">Previous</button>
        <span>Page @currentPage of @totalPages</span>
        <button @onclick="NextPage" disabled="@(!CanNextPage)">Next</button>
    </div>
}

@code {
    private List<CountryDto> countries;
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalPages => (int)Math.Ceiling((double)countries.Count / pageSize);

    private IEnumerable<CountryDto> PagedCountries => countries
        .Skip((currentPage - 1) * pageSize)
        .Take(pageSize);

    protected override async Task OnInitializedAsync()
    {
        countries = await CountryService.GetAllCountriesAsync();
    }

    private void NextPage()
    {
        if (CanNextPage)
        {
            currentPage++;
        }
    }

    private void PreviousPage()
    {
        if (CanPreviousPage)
        {
            currentPage--;
        }
    }

    private bool CanPreviousPage => currentPage > 1;
    private bool CanNextPage => currentPage < totalPages;
}
